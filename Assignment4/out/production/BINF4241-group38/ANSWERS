## Part 1: 
This assignment is based on the code of assignment 1 from 09.10.2019

a) 

1) 
   - 
   

## Part 2:

2.1) GameBoard.java: 
In the GameBoardTest.java following tests failed:

- markTwice: This test failed because the mark() method of class GameBoard returned wrong boolean values (they were switched).
Following changes were performed in order to correct the code and let the test pass:
    
    - the return statement had to be changed from TRUE to FALSE, 
    if the board square was already occupied 
    
    - the return statement had to be changed from FALSE to TRUE,
    if the board square was not already occupied.
    
- getOpenPositions: This test failed because the column started iterating at index 1 instead of index 0 in the getOpenPositions()
method of the GameBoard class.
Following changes were performed in order to correct the code and let the test pass:

    - the index where the column starts to iterate had to be changed to 0.
    
- getOpenPositionsAll: This test failed for the same reason as the test above "getOpenPositions" failed and 
hence same changes were performed. 

- markOnBoard: This test failed because in the javaDoc description of the GameBoard constructor the @param "the board to copy" was not named right.
Following changes were performed in order to correct the code and let the test pass:

    - In the JavaDoc of the GameBoard constructor, the @param parameter had to be changed from BOARD to OTHER


2.2) TicTacToeGameState.java:
In the TicTacToeGameStateTest.java following tests failed:

- startingPlayerIsX, getAvailableStatesLastOne and switchPlayer: these tests failed because the getCurrentPlayer() method from
the TicTacToeGameState class returned a random player instead of the current player.
Following changes were performed in order to correct the code and let the test pass:
                                                                                         
    - we deleted the short code which generated a random player in the getCurrentPlayer() method.
    Like this the currentplayer is returned.
    
- IsOverWin, hasWinCol, and hasWinTow: these tests failed because the hasWin() method returned false if the player had a complete row or if
the player had a complete column. What obviously makes no sense.
Following changes were performed in order to correct the code and let the test pass:

    - In the hasWin() method, we have changed the return value from FALSE to TRUE if the player had a complete row
    or a complete column.

- hasWinDiagonal: this test failed because     
    
    


## Part 3

